*************
HEad
*******************
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <title>ServiciosGrupos3</title>
</head>








**************
navbar
************************************

 <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="index.jsp">SOA</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                     <a class="nav-link" aria-current="page" href="buscar.jsp">Buscar Estudiante</a>
                </li>
            </ul>
        </div>
    </div>
</nav>









*************************************
Index
***************************************
<%@page import="Quinto.ApiConsumer"%>
<%@page import="java.net.http.HttpResponse"%>
<%@page import="org.json.JSONObject"%>
<%@page import="org.json.JSONArray"%>

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <jsp:include page="head.jsp"/>
      <body style="width: 80%; margin: auto;">
        <div>
            <jsp:include page="navbar.jsp"/>
        </div>
        <div class="container">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">CEDULA</th>
                        <th scope="col">NOMBRE</th>
                        <th scope="col">APELLIDO</th>
                        <th scope="col">DIRECCION</th>
                        <th scope="col">TELEFONO</th>
                        <th scope="col"></th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    <%
                        ApiConsumer api = new ApiConsumer();
                        JSONArray estudiantes = api.getEstudiantes();

                        for (int i = 0; i < estudiantes.length(); i++) {
                            JSONObject estudiante = estudiantes.getJSONObject(i);
                            String cedula = estudiante.getString("cedula");
                            String nombre = estudiante.getString("nombre");
                            String apellido = estudiante.getString("apellido");
                            String direccion = estudiante.getString("direccion");
                            String telefono = estudiante.getString("telefono");
                    %>
                    <tr>
                        <td><%=cedula%></td>
                        <td><%=nombre%></td>
                        <td><%=apellido%></td>
                        <td><%=direccion%></td>
                        <td><%=telefono%></td>
                        <td><a href="#" class="btn btn-primary editarBtn" 
                               data-cedula="<%= cedula%>"
                               data-nombre="<%= nombre%>"
                               data-apellido="<%= apellido%>"
                               data-direccion="<%= direccion%>"
                               data-telefono="<%= telefono%>"></a>
                        </td>
                       
                    </tr>

                    <%
                        }
                    %>
                </tbody>
            </table>
        </div>
       
    </body>

</html>



**********************
Buscar
**********************
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@page import="Quinto.ApiConsumer"%>
<%@page import="java.net.http.HttpResponse"%>
<%@page import="java.net.URI"%>
<%@page import="java.net.http.HttpRequest"%>
<%@page import="java.net.http.HttpClient"%>
<%@page import="org.json.JSONObject"%>
<%@page import="org.json.JSONArray"%>
<!DOCTYPE html>
<html lang="es">
    <jsp:include page="head.jsp" />

    <body style="width: 80%; margin: auto;">
        <div>
            <jsp:include page="navbar.jsp" />
        </div>

        <form method="POST" autocomplete="off">
            <div class="mb-3">
                <label for="cedula" class="form-label">Cedula requerida</label>
                <input type="text" class="form-control" id="cedula" name="cedula">
            </div>
            <button type="submit" class="btn btn-primary">Buscar</button>
        </form>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">CEDULA</th>
                    <th scope="col">NOMBRE</th>
                    <th scope="col">APELLIDO</th>
                    <th scope="col">DIRECCION</th>
                    <th scope="col">TELEFONO</th>
                    <th scope="col"></th>
                    <th scope="col"></th>
                </tr>
            </thead>

            <tbody>  

                <%
                    if (!(request.getMethod().equals("POST"))) {
                        return;
                    }
                    String id = "";
                    try {
                        id = request.getParameter("cedula");
                        //cliente
                        HttpClient cliente = HttpClient.newHttpClient();
                        //solicitud
                        HttpRequest solicitud = HttpRequest.newBuilder()
                                .uri(URI.create("http://localhost/NQuinto/API.php" + "?cedula=" + id))
                                .GET()
                                .build();
                        //respuesta
                        HttpResponse<String> respuesta = cliente.send(solicitud, HttpResponse.BodyHandlers.ofString());

                        JSONArray jsonArray = new JSONArray(respuesta.body());
                        if (jsonArray.isEmpty()) {
                            out.print("<br>");
                            out.print("<div class='alert alert-danger'" + "role='alert'>No encontrado</div>");
                            return;
                        } else {
                            out.print("<br>");
                            out.print("<div class='alert alert-success'" + "role='alert'>Buscados con exito</div>");
                        }
                        for (int i = 0; i < jsonArray.length(); i++) {
                            String cedula = jsonArray.getJSONObject(i).getString("cedula").toString();
                            String nombre = jsonArray.getJSONObject(i).getString("nombre").toString();
                            String apellido = jsonArray.getJSONObject(i).getString("apellido").toString();
                            String direccion = jsonArray.getJSONObject(i).getString("direccion").toString();
                            String telefono = jsonArray.getJSONObject(i).getString("telefono").toString();
                %>
                <tr>
                    <td><%= cedula%></td>
                    <td><%= nombre%></td>
                    <td><%= apellido%></td>
                    <td><%= direccion%></td>
                    <td><%= telefono%></td>
                </tr>
                <%
                        }
                    } catch (Exception e) {
                        out.print("<br>");
                        out.print("<div class='alert alert-success'" + "role='alert'>ERROR AL BUSCAR</div>");
                    }
                %>

            </tbody>
        </table>
    </body>
</html>



********************
Api
Consumer 
*****************************************************************************


package Quinto;

import java.io.IOException;
import java.net.URI;
import java.net.URL;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.net.http.HttpResponse.BodyHandlers;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ws.rs.core.Response;
import javax.xml.ws.soap.AddressingFeature;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author DELL
 */
public class ApiConsumer {

    private final HttpClient httpClient;
    private static String url = "http://localhost/tarea1/api.php";

    public ApiConsumer() {
        this.httpClient = HttpClient.newHttpClient();

    }

    public JSONArray getEstudiantes() throws Exception {
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(url))
                .GET()
                .build();
        HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());
        return new JSONArray(response.body());
    }

    // crear un estudiante 
    public HttpResponse<String> postEstudiante(String cedula, String nombre, String apellido, String direccion, String telefono) {
        try {
            JSONObject estudiante = new JSONObject();
            estudiante.put("cedula", cedula);
            estudiante.put("nombre", nombre);
            estudiante.put("apellido", apellido);
            estudiante.put("direccion", direccion);
            estudiante.put("telefono", telefono);
            HttpRequest request = HttpRequest.newBuilder()
                    .uri(URI.create(url))
                    .header("Content-Type", "aplication/json")
                    .POST(HttpRequest.BodyPublishers.ofString(estudiante.toString()))
                    .build();

            HttpResponse<String> response = httpClient.send(request,HttpResponse.BodyHandlers.ofString());

            return response;
        } catch (Exception x) {
            Logger.getLogger("Error al enviar estudiante" + x);
            return null;
        }
    }
    
    public HttpResponse<String> deleteEstudiante(String cedula){
        HttpResponse<String>  response = null;
        try{
           URI uri = URI.create(url + "?cedula"+cedula);
           HttpRequest request = HttpRequest.newBuilder()
                   .uri(uri)
                           .DELETE()
                   .build();
           response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());
           return response;
        }catch (Exception ex){
            System.out.println("Error al eliminar" + ex);
            return response;
        }
    }
    
  //  public int getResponceStatus(HttpResponse<String)
   
public int getResponseStatusCode(HttpResponse<String> response) {
        return response.statusCode();
    }

    public HttpResponse<String> putEstudiante(String... algo) {
        HttpResponse<String> response = null;
        URI uri = URI.create(url + "?cedula=" + algo[0] + "&nombre=" + algo[1] + "&apellido=" + algo[2] + "&direccion=" + algo[3]
                + "&telefono=" + algo[4]);
        HttpRequest request = HttpRequest.newBuilder()
                .uri(uri)
                .PUT(HttpRequest.BodyPublishers.noBody())
                .build();
        try {
            response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());
            return response;
        } catch (InterruptedException e) {
            System.out.println("Error al editar");
            return response;
        } catch (IOException a) {
            System.out.println("Error al editar.");
            return response;

        }
    }
    
    
    public HttpResponse<String> updateUser(String cedula, String nombre, String apellido, String direccion, String telefono) throws Exception {
        // Crea el objeto JSON con los datos a actualizar
        JSONObject data = new JSONObject();
        data.put("cedula", cedula);
        data.put("nombre", nombre);
        data.put("apellido", apellido);
        data.put("direccion", direccion);
        data.put("telefono", telefono);

        // Construye la URI
        URI uri = URI.create(url);

        // Crea una solicitud PUT para actualizar el usuario
        HttpRequest request = HttpRequest.newBuilder()
                .uri(uri)
                .header("Content-Type", "application/json")
                .PUT(HttpRequest.BodyPublishers.ofString(data.toString()))
                .build();

        // Envía la solicitud y devuelve la respuesta
        return httpClient.send(request, BodyHandlers.ofString());
    }
}





***************************************************************
*****************************************************

Api.php 

**************
<?php
include_once('CRUD.php');

$crud = new CRUD();
$opc = $_SERVER["REQUEST_METHOD"];

switch ($opc) {

    case "GET":
        if (isset($_GET['cedula']) && isset($_GET['nombre'])){
            // Probar en PostMan con:
            //    params
            $parametro1 = $_GET['cedula'];
            $parametro2 = $_GET['nombre'];
            $crud->obtenerEstudianteCondiciones($parametro1,$parametro2);
            return;
        }else if (isset($_GET['cedula'])) {
        
            $cedula = $_GET['cedula'];
            $crud->obtenerEstudiante($cedula);
            return;
        } else {
            $crud->obtenerEstudiantes();
            return;
        }

    case "POST":
        $crud->guardarEstudiante();
        return;
    
    case "PUT":
        parse_str(file_get_contents('php://input'), $putData);
        $cedula = $putData['cedula'];
        $nombre = $putData['nombre'];
        $apellido = $putData['apellido'];
        $direccion = $putData['direccion'];
        $telefono = $putData['telefono'];
        $crud->actualizarEstudiante($cedula, $nombre, $apellido, $direccion, $telefono);
        return;

   
}
***************************************+++++++
***************************************
Conexión **
*******************************

<?php
class CONEXION{
    private $conexion;
    public function conectar(){
        $puerto = "3306";
        $host = "localhost";
        $db = "quinto";
        $usuario = "root";
        $psw = "";

        // Esta línea es para que reconozca caracteres como la "ñ" xd
        $opc = array(PDO::MYSQL_ATTR_INIT_COMMAND => 'SET NAMES utf8');

        try {
            $this->conexion = new PDO("mysql:host=" . $host . ":" . $puerto . ";dbname=" . $db, $usuario, $psw, $opc);
            //echo ("Conexion establecida. . .");
            return true;
        } catch (PDOException $e) {
            echo ("Error en la conexión. . ." . $e->getMessage() . ". . .");
            return false;
        }
    }

    public function getCon(){
        return $this->conexion;
    }

    public function desconectar(){
        $this->conexion = null;
    }
}


***************************

***************************
************************

CRUD
************************

<?php
include_once('CONEXION.php');
class CRUD
{
    private $conexion;
    public function __construct(){
        $this->conexion = new CONEXION();
    }
    public function obtenerEstudiantes(){
        $this->conexion->conectar();

        $sql = "SELECT * FROM estudiante";
        $resul = $this->conexion->getCon()->prepare($sql);
        $resul->execute();
        $data = $resul->fetchAll(PDO::FETCH_ASSOC);

        $this->conexion->desconectar();
        echo json_encode($data);
    }
    public function obtenerEstudiante($cedula){
        $this->conexion->Conectar();

        // Para guardar todos los resultados posibles
        // que coincidan con la busqueda
        $objetos = array();

        $sql = "SELECT * FROM estudiante WHERE cedula = '$cedula'";
        $resul = $this->conexion->getCon()->prepare($sql);
        $resul->execute();

        while ($row = $resul->fetch(PDO::FETCH_ASSOC)) {
            $objeto = array(
                "cedula" => $row["cedula"],
                "nombre" => $row["nombre"],
                "apellido" => $row["apellido"],
                "direccion" => $row["direccion"],
                "telefono" => $row["telefono"]
            );
            array_push($objetos, $objeto);
        }
        $this->conexion->desconectar();
        echo json_encode($objetos);
    }

    public function obtenerEstudianteCondiciones($parametro1,$parametro2){
        $this->conexion->Conectar();

        // Para guardar todos los resultados posibles
        // que coincidan con la busqueda
        $objetos = array();

        $sql = "SELECT * FROM estudiante WHERE cedula LIKE '%$parametro1%' AND nombre LIKE '%$parametro2%'";
        //$sql = "SELECT * FROM estudiante WHERE cedula = (SELECT cedula FROM tabla2 WHERE campo = '$parametro2')";
        $resul = $this->conexion->getCon()->prepare($sql);
        $resul->execute();

        while ($row = $resul->fetch(PDO::FETCH_ASSOC)) {
            $objeto = array(
                "cedula" => $row["cedula"],
                "nombre" => $row["nombre"],
                "apellido" => $row["apellido"],
                "direccion" => $row["direccion"],
                "telefono" => $row["telefono"]
            );
            array_push($objetos, $objeto);
        }
        $this->conexion->desconectar();
        echo json_encode($objetos);
    }

}


*********************************





